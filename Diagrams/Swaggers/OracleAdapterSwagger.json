{
    "openapi": "3.0.2",
    "info": {
        "version": "1.0",
        "title": "Interface for interaction between Account Lookup Service and an Oracle’s adapter",
        "description": "Based on API Definition.docx updated on 2018-03-13 Version 1.0. Note - The API supports a maximum size of 65536 bytes (64 Kilobytes) in the HTTP header.",
        "license": {
            "name": "CC-BY-ND 4.0"
        }
    },
    "paths": {
        "/participants/{Type}/{ID}": {
            "get": {
                "description": "The HTTP request GET /participants/{Type}/{ID} (or GET /participants/{Type}/{ID}/{SubId}) is used to find out in which FSP the requested Party, defined by {Type}, {ID} and optionally {SubId}, is located (for example, GET /participants/MSISDN/123456789, or GET /participants/BUSINESS/shoecompany/employee1).",
                "summary": "ParticipantsByTypeAndID",
                "tags": [
                    "participants"
                ],
                "operationId": "ParticipantsByTypeAndID",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "$ref": "#/components/parameters/Type"
                    },
                    {
                        "$ref": "#/components/parameters/ID"
                    },
                    {
                        "$ref": "#/components/parameters/Content-Type"
                    },
                    {
                        "$ref": "#/components/parameters/Date"
                    },
                    {
                        "$ref": "#/components/parameters/X-Forwarded-For"
                    },
                    {
                        "$ref": "#/components/parameters/FSPIOP-Source"
                    },
                    {
                        "$ref": "#/components/parameters/FSPIOP-Destination-Optional"
                    },
                    {
                        "$ref": "#/components/parameters/FSPIOP-Encryption"
                    },
                    {
                        "$ref": "#/components/parameters/FSPIOP-Signature"
                    },
                    {
                        "$ref": "#/components/parameters/FSPIOP-URI"
                    },
                    {
                        "$ref": "#/components/parameters/FSPIOP-HTTP-Method"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ParticipantTypeIdGetResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/ErrorResponse400"
                    },
                    "401": {
                        "$ref": "#/components/responses/ErrorResponse401"
                    },
                    "403": {
                        "$ref": "#/components/responses/ErrorResponse403"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorResponse404"
                    },
                    "405": {
                        "$ref": "#/components/responses/ErrorResponse405"
                    },
                    "406": {
                        "$ref": "#/components/responses/ErrorResponse406"
                    },
                    "501": {
                        "$ref": "#/components/responses/ErrorResponse501"
                    },
                    "503": {
                        "$ref": "#/components/responses/ErrorResponse503"
                    }
                }
            },
            "put": {
                "description": "The PUT /participants/{Type}/{ID} (or PUT /participants/{Type}/{ID}/{SubId})  is used to update information in the server regarding the provided identity, defined by {Type}, {ID}, and optionally {SubId} (for example, PUT /participants/MSISDN/123456789 or PUT /participants/BUSINESS/shoecompany/employee1).",
                "summary": "ParticipantsByTypeAndID",
                "tags": [
                    "participants"
                ],
                "operationId": "ParticipantsByTypeAndID3",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Accept-Optional"
                    },
                    {
                        "$ref": "#/components/parameters/Type"
                    },
                    {
                        "$ref": "#/components/parameters/ID"
                    },
                    {
                        "$ref": "#/components/parameters/Content-Type"
                    },
                    {
                        "$ref": "#/components/parameters/Date"
                    },
                    {
                        "$ref": "#/components/parameters/X-Forwarded-For"
                    },
                    {
                        "$ref": "#/components/parameters/FSPIOP-Source"
                    },
                    {
                        "$ref": "#/components/parameters/FSPIOP-Destination-Optional"
                    },
                    {
                        "$ref": "#/components/parameters/FSPIOP-Encryption"
                    },
                    {
                        "$ref": "#/components/parameters/FSPIOP-Signature"
                    },
                    {
                        "$ref": "#/components/parameters/FSPIOP-URI"
                    },
                    {
                        "$ref": "#/components/parameters/FSPIOP-HTTP-Method"
                    },
                    {
                        "$ref": "#/components/parameters/Content-Length"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Response200"
                    },
                    "400": {
                        "$ref": "#/components/responses/ErrorResponse400"
                    },
                    "401": {
                        "$ref": "#/components/responses/ErrorResponse401"
                    },
                    "403": {
                        "$ref": "#/components/responses/ErrorResponse403"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorResponse404"
                    },
                    "405": {
                        "$ref": "#/components/responses/ErrorResponse405"
                    },
                    "406": {
                        "$ref": "#/components/responses/ErrorResponse406"
                    },
                    "501": {
                        "$ref": "#/components/responses/ErrorResponse501"
                    },
                    "503": {
                        "$ref": "#/components/responses/ErrorResponse503"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ParticipantsTypeIDPutRequest"
                            }
                        }
                    },
                    "required": true
                }
            },
            "post": {
                "description": "The HTTP request POST /participants/{Type}/{ID} (or POST /participants/{Type}/{ID}/{SubId}) is used to create information in the server regarding the provided identity, defined by {Type}, {ID}, and optionally {SubId} (for example, POST /participants/MSISDN/123456789 or POST /participants/BUSINESS/shoecompany/employee1).",
                "summary": "ParticipantsByIDAndType",
                "tags": [
                    "participants"
                ],
                "operationId": "ParticipantsByIDAndType",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "$ref": "#/components/parameters/Type"
                    },
                    {
                        "$ref": "#/components/parameters/ID"
                    },
                    {
                        "$ref": "#/components/parameters/Content-Type"
                    },
                    {
                        "$ref": "#/components/parameters/Date"
                    },
                    {
                        "$ref": "#/components/parameters/X-Forwarded-For"
                    },
                    {
                        "$ref": "#/components/parameters/FSPIOP-Source"
                    },
                    {
                        "$ref": "#/components/parameters/FSPIOP-Destination-Optional"
                    },
                    {
                        "$ref": "#/components/parameters/FSPIOP-Encryption"
                    },
                    {
                        "$ref": "#/components/parameters/FSPIOP-Signature"
                    },
                    {
                        "$ref": "#/components/parameters/FSPIOP-URI"
                    },
                    {
                        "$ref": "#/components/parameters/FSPIOP-HTTP-Method"
                    },
                    {
                        "$ref": "#/components/parameters/Content-Length"
                    }
                ],
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/Response201"
                    },
                    "400": {
                        "$ref": "#/components/responses/ErrorResponse400"
                    },
                    "401": {
                        "$ref": "#/components/responses/ErrorResponse401"
                    },
                    "403": {
                        "$ref": "#/components/responses/ErrorResponse403"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorResponse404"
                    },
                    "405": {
                        "$ref": "#/components/responses/ErrorResponse405"
                    },
                    "406": {
                        "$ref": "#/components/responses/ErrorResponse406"
                    },
                    "501": {
                        "$ref": "#/components/responses/ErrorResponse501"
                    },
                    "503": {
                        "$ref": "#/components/responses/ErrorResponse503"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ParticipantsTypeIDPutRequest"
                            }
                        }
                    },
                    "required": true
                }
            },
            "delete": {
                "description": "The HTTP request DELETE /participants/{Type}/{ID} is used to delete information in the server regarding the provided identity, defined by {Type} and {ID}) (for example, DELETE /participants/MSISDN/123456789). This HTTP request should support a query string to delete FSP information regarding a specific currency only. To delete a specific currency only, the HTTP request DELETE /participants/{Type}/{ID}?currency=XYZ should be used, where XYZ is the requested currency. Note -  The Account Lookup System should verify that it is the Party’s current FSP that is deleting the FSP information.",
                "summary": "ParticipantsByTypeAndID",
                "tags": [
                    "participants"
                ],
                "operationId": "ParticipantsByTypeAndID2",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "$ref": "#/components/parameters/Type"
                    },
                    {
                        "$ref": "#/components/parameters/ID"
                    },
                    {
                        "$ref": "#/components/parameters/Content-Type"
                    },
                    {
                        "$ref": "#/components/parameters/Date"
                    },
                    {
                        "$ref": "#/components/parameters/X-Forwarded-For"
                    },
                    {
                        "$ref": "#/components/parameters/FSPIOP-Source"
                    },
                    {
                        "$ref": "#/components/parameters/FSPIOP-Destination-Optional"
                    },
                    {
                        "$ref": "#/components/parameters/FSPIOP-Encryption"
                    },
                    {
                        "$ref": "#/components/parameters/FSPIOP-Signature"
                    },
                    {
                        "$ref": "#/components/parameters/FSPIOP-URI"
                    },
                    {
                        "$ref": "#/components/parameters/FSPIOP-HTTP-Method"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/Response204"
                    },
                    "400": {
                        "$ref": "#/components/responses/ErrorResponse400"
                    },
                    "401": {
                        "$ref": "#/components/responses/ErrorResponse401"
                    },
                    "403": {
                        "$ref": "#/components/responses/ErrorResponse403"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorResponse404"
                    },
                    "405": {
                        "$ref": "#/components/responses/ErrorResponse405"
                    },
                    "406": {
                        "$ref": "#/components/responses/ErrorResponse406"
                    },
                    "501": {
                        "$ref": "#/components/responses/ErrorResponse501"
                    },
                    "503": {
                        "$ref": "#/components/responses/ErrorResponse503"
                    }
                }
            }
        },
        "/participants": {
            "post": {
                "description": "The HTTP request POST /participants is used to create information in the server regarding the provided list of identities. This request should be used for bulk creation of FSP information for more than one Party. The optional currency parameter should indicate that each provided Party supports the currency",
                "summary": "Participants",
                "tags": [
                    "participants"
                ],
                "operationId": "Participants1",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "$ref": "#/components/parameters/Content-Length"
                    },
                    {
                        "$ref": "#/components/parameters/Content-Type"
                    },
                    {
                        "$ref": "#/components/parameters/Date"
                    },
                    {
                        "$ref": "#/components/parameters/X-Forwarded-For"
                    },
                    {
                        "$ref": "#/components/parameters/FSPIOP-Source"
                    },
                    {
                        "$ref": "#/components/parameters/FSPIOP-Destination-Optional"
                    },
                    {
                        "$ref": "#/components/parameters/FSPIOP-Encryption"
                    },
                    {
                        "$ref": "#/components/parameters/FSPIOP-Signature"
                    },
                    {
                        "$ref": "#/components/parameters/FSPIOP-URI"
                    },
                    {
                        "$ref": "#/components/parameters/FSPIOP-HTTP-Method"
                    }
                ],
                "x-examples": {
                    "application/json": {
                        "“requestId”": "“b51ec534-ee48-4575-b6a9-ead2955b8069”",
                        "“partyList”": [
                            {
                                "“partyIdType”": "“PERSONAL_ID”",
                                "“partyIdentifier”": "“16135551212”",
                                "“partySubIdOrType”": "“PASSPORT”",
                                "“fspId”": "“1234”",
                                "“currency”": "“USD”"
                            },
                            {
                                "“partyIdType”": "“PERSONAL_ID”",
                                "“partyIdentifier”": "“16135551234”",
                                "“partySubIdOrType”": "“DRIVING_LICENSE”",
                                "“fspId”": "“1234”",
                                "“currency”": "“USD”"
                            }
                        ],
                        "currency": "USD"
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/Response201"
                    },
                    "400": {
                        "$ref": "#/components/responses/ErrorResponse400"
                    },
                    "401": {
                        "$ref": "#/components/responses/ErrorResponse401"
                    },
                    "403": {
                        "$ref": "#/components/responses/ErrorResponse403"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorResponse404"
                    },
                    "405": {
                        "$ref": "#/components/responses/ErrorResponse405"
                    },
                    "406": {
                        "$ref": "#/components/responses/ErrorResponse406"
                    },
                    "501": {
                        "$ref": "#/components/responses/ErrorResponse501"
                    },
                    "503": {
                        "$ref": "#/components/responses/ErrorResponse503"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ParticipantsPostRequest"
                            }
                        }
                    },
                    "required": true
                }
            }
        }
    },
    "servers": [
        {
            "url": "/"
        }
    ],
    "components": {
        "parameters": {
            "Accept": {
                "name": "accept",
                "in": "header",
                "required": true,
                "description": "The Accept header field indicates the version of the API the client would like the server to use.",
                "schema": {
                    "type": "string"
                }
            },
            "Accept-Optional": {
                "name": "accept",
                "in": "header",
                "required": false,
                "description": "The Accept header field indicates the version of the API the client would like the server to use.",
                "schema": {
                    "type": "string"
                }
            },
            "Content-Length": {
                "name": "content-length",
                "in": "header",
                "required": false,
                "description": "The Content-Length header field indicates the anticipated size of the payload body. Only sent if there is a body. Note - The API supports a maximum size of 5242880 bytes (5 Megabytes)",
                "schema": {
                    "type": "integer"
                }
            },
            "Content-Type": {
                "name": "content-type",
                "in": "header",
                "required": true,
                "description": "The Content-Type header indicates the specific version of the API used to send the payload body.",
                "schema": {
                    "type": "string"
                }
            },
            "Date": {
                "name": "date",
                "in": "header",
                "required": true,
                "description": "The Date header field indicates the date when the request was sent.",
                "schema": {
                    "type": "string"
                }
            },
            "X-Forwarded-For": {
                "name": "x-forwarded-for",
                "in": "header",
                "required": false,
                "description": "The X-Forwarded-For header field is an unofficially accepted standard used for informational purposes of the originating client IP address, as a request might pass multiple proxies, firewalls, and so on. Multiple X-Forwarded-For values as in the example shown here should be expected and supported by implementers of the API. Note - An alternative to X-Forwarded-For is defined in RFC 7239. However, to this point RFC 7239 is less-used and supported than X-Forwarded-For.",
                "schema": {
                    "type": "string"
                }
            },
            "FSPIOP-Source": {
                "name": "fspiop-source",
                "in": "header",
                "required": true,
                "description": "The FSPIOP-Source header field is a non-HTTP standard field used by the API for identifying the sender of the HTTP request. The field should be set by the original sender of the request. Required for routing and signature verification (see header field FSPIOP-Signature).",
                "schema": {
                    "type": "string"
                }
            },
            "FSPIOP-Destination-Required": {
                "name": "fspiop-destination",
                "in": "header",
                "required": true,
                "description": "The FSPIOP-Destination header field is a non-HTTP standard field used by the API for HTTP header based routing of requests and responses to the destination. The field should be set by the original sender of the request (if known), so that any entities between the client and the server do not need to parse the payload for routing purposes.",
                "schema": {
                    "type": "string"
                }
            },
            "FSPIOP-Destination-Optional": {
                "name": "fspiop-destination",
                "in": "header",
                "required": false,
                "description": "The FSPIOP-Destination header field is a non-HTTP standard field used by the API for HTTP header based routing of requests and responses to the destination. The field should be set by the original sender of the request (if known), so that any entities between the client and the server do not need to parse the payload for routing purposes.",
                "schema": {
                    "type": "string"
                }
            },
            "FSPIOP-Encryption": {
                "name": "fspiop-encryption",
                "in": "header",
                "required": false,
                "description": "The FSPIOP-Encryption header field is a non-HTTP standard field used by the API for applying end-to-end encryption of the request.",
                "schema": {
                    "type": "string"
                }
            },
            "FSPIOP-Signature": {
                "name": "fspiop-signature",
                "in": "header",
                "required": false,
                "description": "The FSPIOP-Signature header field is a non-HTTP standard field used by the API for applying an end-to-end request signature.",
                "schema": {
                    "type": "string"
                }
            },
            "FSPIOP-URI": {
                "name": "fspiop-uri",
                "in": "header",
                "required": false,
                "description": "The FSPIOP-URI header field is a non-HTTP standard field used by the API for signature verification, should contain the service URI. Required if signature verification is used, for more information see API Signature document.",
                "schema": {
                    "type": "string"
                }
            },
            "FSPIOP-HTTP-Method": {
                "name": "fspiop-http-method",
                "in": "header",
                "required": false,
                "description": "The FSPIOP-HTTP-Method header field is a non-HTTP standard field used by the API for signature verification, should contain the service HTTP method. Required if signature verification is used, for more information see API Signature document.",
                "schema": {
                    "type": "string"
                }
            },
            "ID": {
                "name": "ID",
                "in": "path",
                "required": true,
                "description": "The ID related to the Type, if MSISDN then this is the mobile number being requested",
                "schema": {
                    "type": "string"
                }
            },
            "Type": {
                "name": "Type",
                "in": "path",
                "required": true,
                "description": "The type of lookup being requested, this can be MSISDN, bankAccount etc.",
                "schema": {
                    "type": "string"
                }
            },
            "SubId": {
                "name": "SubId",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            }
        },
        "responses": {
            "Response200": {
                "description": "OK"
            },
            "Response201": {
                "description": "Created"
            },
            "Response202": {
                "description": "Accepted"
            },
            "Response204": {
                "description": "No Content"
            },
            "ParticipantTypeIdGetResponse": {
                "description": "OK",
                "headers": {
                    "Content-Length": {
                        "description": "The Content-Length header field indicates the anticipated size of the payload body. Only sent if there is a body.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "Content-Type": {
                        "description": "The Content-Type header indicates the specific version of the API used to send the payload body.",
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ParticipantsTypeIDGetResponse"
                        }
                    }
                }
            },
            "ErrorResponse400": {
                "description": "Bad Request - The application cannot process the request; for example, due to malformed syntax or the payload exceeded size restrictions.",
                "headers": {
                    "Content-Length": {
                        "description": "The Content-Length header field indicates the anticipated size of the payload body. Only sent if there is a body.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "Content-Type": {
                        "description": "The Content-Type header indicates the specific version of the API used to send the payload body.",
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorInformationResponse"
                        }
                    }
                }
            },
            "ErrorResponse401": {
                "description": "Unauthorized - The request requires authentication in order to be processed.",
                "headers": {
                    "Content-Length": {
                        "description": "The Content-Length header field indicates the anticipated size of the payload body. Only sent if there is a body.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "Content-Type": {
                        "description": "The Content-Type header indicates the specific version of the API used to send the payload body.",
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorInformationResponse"
                        }
                    }
                }
            },
            "ErrorResponse403": {
                "description": "Forbidden - The request was denied and will be denied in the future.",
                "headers": {
                    "Content-Length": {
                        "description": "The Content-Length header field indicates the anticipated size of the payload body. Only sent if there is a body.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "Content-Type": {
                        "description": "The Content-Type header indicates the specific version of the API used to send the payload body.",
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorInformationResponse"
                        }
                    }
                }
            },
            "ErrorResponse404": {
                "description": "Not Found - The resource specified in the URI was not found.",
                "headers": {
                    "Content-Length": {
                        "description": "The Content-Length header field indicates the anticipated size of the payload body. Only sent if there is a body.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "Content-Type": {
                        "description": "The Content-Type header indicates the specific version of the API used to send the payload body.",
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorInformationResponse"
                        }
                    }
                }
            },
            "ErrorResponse405": {
                "description": "Method Not Allowed - An unsupported HTTP method for the request was used.",
                "headers": {
                    "Content-Length": {
                        "description": "The Content-Length header field indicates the anticipated size of the payload body. Only sent if there is a body.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "Content-Type": {
                        "description": "The Content-Type header indicates the specific version of the API used to send the payload body.",
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorInformationResponse"
                        }
                    }
                }
            },
            "ErrorResponse406": {
                "description": "Not acceptable - The server is not capable of generating content according to the Accept headers sent in the request. Used in the API to indicate that the server does not support the version that the client is requesting.",
                "headers": {
                    "Content-Length": {
                        "description": "The Content-Length header field indicates the anticipated size of the payload body. Only sent if there is a body.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "Content-Type": {
                        "description": "The Content-Type header indicates the specific version of the API used to send the payload body.",
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorInformationResponse"
                        }
                    }
                }
            },
            "ErrorResponse501": {
                "description": "Not Implemented - The server does not support the requested service. The client should not retry.",
                "headers": {
                    "Content-Length": {
                        "description": "The Content-Length header field indicates the anticipated size of the payload body. Only sent if there is a body.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "Content-Type": {
                        "description": "The Content-Type header indicates the specific version of the API used to send the payload body.",
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorInformationResponse"
                        }
                    }
                }
            },
            "ErrorResponse503": {
                "description": "Service Unavailable - The server is currently unavailable to accept any new service requests. This should be a temporary state, and the client should retry within a reasonable time frame.",
                "headers": {
                    "Content-Length": {
                        "description": "The Content-Length header field indicates the anticipated size of the payload body. Only sent if there is a body.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "Content-Type": {
                        "description": "The Content-Type header indicates the specific version of the API used to send the payload body.",
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorInformationResponse"
                        }
                    }
                }
            }
        },
        "schemas": {
            "Currency": {
                "title": "CurrencyEnum",
                "description": "The currency codes defined in ISO 4217 as three-letter alphabetic codes are used as the standard naming representation for currencies.",
                "type": "string",
                "minLength": 3,
                "maxLength": 3,
                "enum": [
                    "AED",
                    "AFN",
                    "ALL",
                    "AMD",
                    "ANG",
                    "AOA",
                    "ARS",
                    "AUD",
                    "AWG",
                    "AZN",
                    "BAM",
                    "BBD",
                    "BDT",
                    "BGN",
                    "BHD",
                    "BIF",
                    "BMD",
                    "BND",
                    "BOB",
                    "BRL",
                    "BSD",
                    "BTN",
                    "BWP",
                    "BYN",
                    "BZD",
                    "CAD",
                    "CDF",
                    "CHF",
                    "CLP",
                    "CNY",
                    "COP",
                    "CRC",
                    "CUC",
                    "CUP",
                    "CVE",
                    "CZK",
                    "DJF",
                    "DKK",
                    "DOP",
                    "DZD",
                    "EGP",
                    "ERN",
                    "ETB",
                    "EUR",
                    "FJD",
                    "FKP",
                    "GBP",
                    "GEL",
                    "GGP",
                    "GHS",
                    "GIP",
                    "GMD",
                    "GNF",
                    "GTQ",
                    "GYD",
                    "HKD",
                    "HNL",
                    "HRK",
                    "HTG",
                    "HUF",
                    "IDR",
                    "ILS",
                    "IMP",
                    "INR",
                    "IQD",
                    "IRR",
                    "ISK",
                    "JEP",
                    "JMD",
                    "JOD",
                    "JPY",
                    "KES",
                    "KGS",
                    "KHR",
                    "KMF",
                    "KPW",
                    "KRW",
                    "KWD",
                    "KYD",
                    "KZT",
                    "LAK",
                    "LBP",
                    "LKR",
                    "LRD",
                    "LSL",
                    "LYD",
                    "MAD",
                    "MDL",
                    "MGA",
                    "MKD",
                    "MMK",
                    "MNT",
                    "MOP",
                    "MRO",
                    "MUR",
                    "MVR",
                    "MWK",
                    "MXN",
                    "MYR",
                    "MZN",
                    "NAD",
                    "NGN",
                    "NIO",
                    "NOK",
                    "NPR",
                    "NZD",
                    "OMR",
                    "PAB",
                    "PEN",
                    "PGK",
                    "PHP",
                    "PKR",
                    "PLN",
                    "PYG",
                    "QAR",
                    "RON",
                    "RSD",
                    "RUB",
                    "RWF",
                    "SAR",
                    "SBD",
                    "SCR",
                    "SDG",
                    "SEK",
                    "SGD",
                    "SHP",
                    "SLL",
                    "SOS",
                    "SPL",
                    "SRD",
                    "STD",
                    "SVC",
                    "SYP",
                    "SZL",
                    "THB",
                    "TJS",
                    "TMT",
                    "TND",
                    "TOP",
                    "TRY",
                    "TTD",
                    "TVD",
                    "TWD",
                    "TZS",
                    "UAH",
                    "UGX",
                    "USD",
                    "UYU",
                    "UZS",
                    "VEF",
                    "VND",
                    "VUV",
                    "WST",
                    "XAF",
                    "XCD",
                    "XDR",
                    "XOF",
                    "XPF",
                    "YER",
                    "ZAR",
                    "ZMW",
                    "ZWD"
                ]
            },
            "Date": {
                "title": "Date",
                "type": "string",
                "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",
                "description": "The API data type Date is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons. This format, as specified in ISO 8601, contains a date only. A more readable version of the format is yyyy-MM-dd. Examples - \"1982-05-23\", \"1987-08-05”"
            },
            "ErrorCode": {
                "title": "ErrorCode",
                "type": "string",
                "pattern": "^[1-9]\\d{3}$",
                "description": "The API data type ErrorCode is a JSON String of four characters, consisting of digits only. Negative numbers are not allowed. A leading zero is not allowed. Each error code in the API is a four-digit number, for example, 1234, where the first number (1 in the example) represents the high-level error category, the second number (2 in the example) represents the low-level error category, and the last two numbers (34 in the example) represents the specific error."
            },
            "ErrorDescription": {
                "title": "ErrorDescription",
                "type": "string",
                "minLength": 1,
                "maxLength": 128,
                "description": "Error description string."
            },
            "FspId": {
                "title": "FspId",
                "type": "string",
                "minLength": 1,
                "maxLength": 32,
                "description": "FSP identifier."
            },
            "PartyIdentifier": {
                "title": "PartyIdentifier",
                "type": "string",
                "minLength": 1,
                "maxLength": 128,
                "description": "Identifier of the Party."
            },
            "PartyIdTypeEnum": {
                "title": "PartyIdTypeEnum",
                "type": "string",
                "enum": [
                    "MSISDN",
                    "EMAIL",
                    "PERSONAL_ID",
                    "BUSINESS",
                    "DEVICE",
                    "ACCOUNT_ID",
                    "IBAN",
                    "ALIAS"
                ],
                "description": "Below are the allowed values for the enumeration - MSISDN An MSISDN (Mobile Station International Subscriber Directory Number, that is, the phone number) is used as reference to a participant. The MSISDN identifier should be in international format according to the ITU-T E.164 standard. Optionally, the MSISDN may be prefixed by a single plus sign, indicating the international prefix. - EMAIL An email is used as reference to a participant. The format of the email should be according to the informational RFC 3696. - PERSONAL_ID A personal identifier is used as reference to a participant. Examples of personal identification are passport number, birth certificate number, and national registration number. The identifier number is added in the PartyIdentifier element. The personal identifier type is added in the PartySubIdOrType element. - BUSINESS A specific Business (for example, an organization or a company) is used as reference to a participant. The BUSINESS identifier can be in any format. To make a transaction connected to a specific username or bill number in a Business, the PartySubIdOrType element should be used. - DEVICE A specific device (for example, a POS or ATM) ID connected to a specific business or organization is used as reference to a Party. For referencing a specific device under a specific business or organization, use the PartySubIdOrType element. - ACCOUNT_ID A bank account number or FSP account ID should be used as reference to a participant. The ACCOUNT_ID identifier can be in any format, as formats can greatly differ depending on country and FSP. - IBAN A bank account number or FSP account ID is used as reference to a participant. The IBAN identifier can consist of up to 34 alphanumeric characters and should be entered without whitespace. - ALIAS An alias is used as reference to a participant. The alias should be created in the FSP as an alternative reference to an account owner. Another example of an alias is a username in the FSP system. The ALIAS identifier can be in any format. It is also possible to use the PartySubIdOrType element for identifying an account under an Alias defined by the PartyIdentifier."
            },
            "PartySubIdOrType": {
                "title": "PartySubIdOrType",
                "type": "string",
                "minLength": 1,
                "maxLength": 128,
                "description": "Either a sub-identifier of a PartyIdentifier, or a sub-type of the PartyIdType, normally a PersonalIdentifierType."
            },
            "ErrorInformation": {
                "title": "ErrorInformation",
                "type": "object",
                "description": "Data model for the complex type ErrorInformation.",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Specific error number."
                    },
                    "errorDescription": {
                        "type": "string",
                        "description": "Error description string."
                    },
                    "extensionList": {
                        "$ref": "#/components/schemas/ExtensionList",
                        "description": "Optional list of extensions, specific to deployment."
                    }
                },
                "required": [
                    "errorCode",
                    "errorDescription"
                ]
            },
            "ErrorInformationResponse": {
                "title": "ErrorInformationResponse",
                "type": "object",
                "description": "Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses.",
                "properties": {
                    "errorInformation": {
                        "$ref": "#/components/schemas/ErrorInformation"
                    }
                }
            },
            "Extension": {
                "title": "Extension",
                "type": "object",
                "description": "Data model for the complex type Extension",
                "properties": {
                    "key": {
                        "type": "string",
                        "description": "Extension key."
                    },
                    "value": {
                        "type": "string",
                        "description": "Extension value."
                    }
                },
                "required": [
                    "key",
                    "value"
                ]
            },
            "ExtensionList": {
                "title": "ExtensionList",
                "type": "object",
                "description": "Data model for the complex type ExtensionList",
                "properties": {
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        },
                        "minItems": 1,
                        "maxItems": 16,
                        "description": "Number of Extension elements"
                    }
                },
                "required": [
                    "extension"
                ]
            },
            "ParticipantsTypeIDGetResponse": {
                "title": "ParticipantsTypeIDGetResponse",
                "type": "object",
                "description": "OK",
                "properties": {
                    "partyList": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PartyTypeIdInfo"
                        },
                        "minItems": 1,
                        "maxItems": 10000,
                        "description": "List of PartyTypeIdInfo elements that were either created or failed to be created."
                    }
                }
            },
            "ParticipantsTypeIDPutRequest": {
                "title": "ParticipantsTypeIDPutRequest",
                "type": "object",
                "description": "PUT /participants/{Type}/{ID} object",
                "properties": {
                    "fspId": {
                        "type": "string",
                        "description": "FSP Identifier that the Party belongs to."
                    },
                    "currency": {
                        "type": "string",
                        "description": "Indicate that the provided Currency was set to be supported by each successfully added PartyIdInfo."
                    }
                },
                "required": [
                    "fspId",
                    "currency"
                ]
            },
            "ParticipantsPostRequest": {
                "title": "ParticipantsPostRequest",
                "type": "object",
                "description": "POST /participants object",
                "properties": {
                    "requestId": {
                        "type": "string",
                        "description": "The ID of the request, decided by the client. Used for identification of the callback from the server."
                    },
                    "partyList": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PartyIdInfo"
                        },
                        "minItems": 1,
                        "maxItems": 10000,
                        "description": "List of PartyIdInfo elements that the client would like to update or create FSP information about."
                    }
                },
                "required": [
                    "requestId",
                    "partyList"
                ]
            },
            "PartyIdInfo": {
                "title": "PartyIdInfo",
                "type": "object",
                "description": "Data model for the complex type PartyIdInfo.",
                "properties": {
                    "partyIdType": {
                        "type": "string",
                        "description": "Type of the identifier."
                    },
                    "partyIdentifier": {
                        "type": "string",
                        "description": "An identifier for the Party."
                    },
                    "partySubIdOrType": {
                        "type": "string",
                        "description": "A sub-identifier or sub-type for the Party."
                    },
                    "fspId": {
                        "type": "string",
                        "description": "FSP ID (if known)"
                    },
                    "currency": {
                        "type": "string",
                        "description": "Indicate that the provided Currency was set to be supported by each successfully added PartyIdInfo."
                    }
                },
                "required": [
                    "partyIdType",
                    "partyIdentifier"
                ]
            },
            "PartyTypeIdInfo": {
                "title": "PartyTypeIdInfo",
                "type": "object",
                "description": "Data model for the complex type PartyIdInfo.",
                "properties": {
                    "fspId": {
                        "type": "string",
                        "description": "FSP ID (if known)"
                    },
                    "currency": {
                        "type": "string",
                        "description": "Indicate that the provided Currency was set to be supported by each successfully added PartyIdInfo."
                    }
                }
            }
        }
    }
}