@startuml
' declate title
title 6.1.2. Close Settlement Window (closeSettlementWindow)

autonumber 

' declare actors
actor "Hub Employee" as OPERATOR
boundary "Settlement Service API" as SSAPI
entity "Settlement DAO" as SETTLE_DAO
database "Central Store" as DB

box "Central HUB" #lightpink
    participant OPERATOR
end box

box "Settlement Service" #lightgreen
    participant SSAPI
    participant SETTLE_DAO
end box

box "Central Services" #lightyellow
    participant DB
end box

' start flow
group Close Settlement Window
    activate OPERATOR
    note right of OPERATOR #yellow
        {
            "state": "CLOSED",
            "reason": <string>
        }
    end note

    OPERATOR -> SSAPI: POST - /settlementWindows/{id}
    activate SSAPI
    SSAPI -> SSAPI: Validate payload and requested state
    break
        note right of SSAPI #yellow
            {
                "errorInformation": {
                    "errorCode": <integer>,
                    "errorDescription": "Invalid payload or state"
                }
            }
        end note
        OPERATOR <-- SSAPI: Respond HTTP - 400 (Bad Request)
    end
    SSAPI -> SETTLE_DAO: Get requested settlementWindow and state\n<color #FF0000><b>Error code:</b> 2001</color>
    activate SETTLE_DAO
    SETTLE_DAO -> DB: Get settlementWindow state
    activate DB
    hnote over DB #lightyellow
        SELECT sw.settlementWindowId, swsc.settlementWindowStateId, 
               swsc.reason, sw.createdDate, swsc.createdDate changedDate
        FROM **settlementWindow** AS sw
        JOIN **settlementWindowStateChange** AS swsc
        ON swsc.settlementWindowStateChangeId = sw.currentStateChangeId
        WHERE sw.settlementWindowId = {id}
    end hnote
    deactivate DB
    SETTLE_DAO --> SSAPI: Return result
    deactivate SETTLE_DAO

    alt settlementWindow found && settlementWindowStateId == 'OPEN'
        SSAPI -> SETTLE_DAO: Close current window and open a new one\n<color #FF0000><b>Error code:</b> 2001</color>
        activate SETTLE_DAO
        group <color #blue>DB TRANSACTION</color>
            note right of SETTLE_DAO #lightgray
                let **transactionTimestamp** = now()
            end note

            SETTLE_DAO -> DB: Close requested window
            hnote over DB #lightyellow
                INSERT INTO **settlementWindowStateChange**
                       (settlementWindowId, settlementWindowStateId, reason, createdDate)
                VALUES ({id}, {payload.state}, {payload.reason}, {transactionTimestamp})
            end hnote
            SETTLE_DAO <-- DB: Return **settlementWindowStateChangeId**
            deactivate DB

            SETTLE_DAO -> DB: Update pointer to current state change id
            hnote over DB #lightyellow
                UPDATE **settlementWindow**
                SET currentStateChangeId = {settlementWindowStateChangeId}
                WHERE settlementWindowId = {id}
            end hnote
            deactivate DB

            SETTLE_DAO -> DB: Create new settlementWindow
            activate DB
            hnote over DB #lightyellow
                INSERT INTO **settlementWindow** (reason, createdDate)
                VALUES ({payload.reason}, {transactionTimestamp})
            end note
            SETTLE_DAO <-- DB: Return **settlementWindowId**
            deactivate DB

            SETTLE_DAO -> DB: Insert intial state for the created window
            activate DB
            hnote over DB #lightyellow
                INSERT INTO **settlementWindowStateChange**
                       (settlementWindowId, settlementWindowStateId, reason, createdDate)
                VALUES ({settlementWindowId}, 'OPEN', {payload.reason}, {transactionTimestamp})
            end note
            SETTLE_DAO <-- DB: Return **newSettlementWindowStateChangeId**
            deactivate DB

            SETTLE_DAO -> DB: Update pointer to current state change id
            hnote over DB #lightyellow
                UPDATE **settlementWindow**
                SET currentStateChangeId = {newSettlementWindowStateChangeId}
                WHERE settlementWindowId = {settlementWindowId}
            end hnote
            deactivate DB
        end
        SSAPI <-- SETTLE_DAO: Return success
        deactivate SETTLE_DAO

        note left of SSAPI #yellow
            {
                "id": settlementWindowId,
                "state": 'OPEN',
                "reason": payload.reason,
                "createdDate": transactionTimestamp,
                "changedDate": transactionTimestamp
            }
        end note
        OPERATOR <-- SSAPI: Respond HTTP - 201 (Created)
    else
        note right of SSAPI #lightgray
            Log ERROR event
        end note
        note left of SSAPI #yellow
            {
                "errorInformation": {
                    "errorCode": <integer>,
                    "errorDescription": "Client error description"
                }
            }
        end note
        OPERATOR <-- SSAPI: Respond HTTP - 4xx (Client error)
        deactivate SSAPI
        deactivate OPERATOR
    end
end
@enduml
